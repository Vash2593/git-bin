#! /bin/sh
set -e
me=`basename $0`
stderr ()
{
  local i
  for i
  do
    echo >&2 "$me: $i"
  done
}

error ()
{
  local sta=$1
  shift
  stderr "$@"
  exit $sta
}

usage() {
    cat <<EOF
usage: $0 <Options> [submodule...]

Commit in the root git, the commits of the submodules given as
arguments.

Create one pretty commit message for each submodule given as argument.

Options:

  -h, --help         Display this message and exit successfully.
  -n, --no-verify    This option bypasses the pre-commit and
                     commit-msg hooks. See also githooks(5).
EOF
    exit $1
}

work() {
    submodule=$1
    if ! git is-submodule "$submodule"; then
        error 2 "$submodule is not a submodule"
    fi
    nb_commit=$((`git submodule summary $submodule | grep -Ev '^\*' | wc -l` - 1))
    git add "$submodule"
    git commit $commit_opts -m "$(cat<<.
Update $submodule with $nb_commit commit(s).

With:
$(cd $submodule && git log --pretty=format:"* %h: %s" -n$nb_commit)
.
)"
}

for opt
do
    case $opt in
        (-h|--help)
            usage 0
            ;;
        (-n|--no-verify)
            commit_opts="$commit_opts -n"
            ;;
        (*)
            args="$args $opt"
            ;;
    esac
done

if [ "x$args" != "x" ]
then
    for sb in $args; do
        work $sb
    done
else
    error 127 "Not implemented"
fi
